{"./":{"url":"./","title":"前言","keywords":"","body":"科学上网相关知识总结 最新版本：v3.0 更新时间：20200710 简介 总结关于科学上网的概念、方法及工具。目的是用于看了后，知道科学上网的概念以及如何使用合适的工具去实现自己科学上网的需求。主要介绍了最近主流的shadowsocks，和最新的V2Ray和Trojan等技术。 源码+浏览+下载 本书的各种源码、在线浏览地址、多种格式文件下载如下： Gitbook源码 crifan/scientific_network_summary: 科学上网相关知识总结 如何使用此Gitbook源码去生成发布为电子书 详见：crifan/gitbook_template: demo how to use crifan gitbook template and demo 在线浏览 科学上网相关知识总结 crifan.github.io 离线下载阅读 科学上网相关知识总结 PDF 科学上网相关知识总结 ePub 科学上网相关知识总结 Mobi 版权说明 此电子书教程的全部内容，如无特别说明，均为本人原创和整理。其中部分内容参考自网络，均已备注了出处。如有发现侵犯您版权，请通过邮箱联系我 admin 艾特 crifan.com，我会尽快删除。谢谢合作。 鸣谢 感谢我的老婆陈雪的包容理解和悉心照料，才使得我crifan有更多精力去专注技术专研和整理归纳出这些电子书和技术教程，特此鸣谢。 更多其他电子书 本人crifan还写了其他100+本电子书教程，感兴趣可移步至： crifan/crifan_ebook_readme: Crifan的电子书的使用说明 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2021-07-22 22:33:52 "},"scientific_network_intro/":{"url":"scientific_network_intro/","title":"科学上网介绍","keywords":"","body":"科学上网介绍 此处对科学上网进行详细的介绍，先解释科学上网是啥，然后再解释目前现在哪些技术和对应工具。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"scientific_network_intro/what.html":{"url":"scientific_network_intro/what.html","title":"什么是科学上网","keywords":"","body":"什么是科学上网 科学上网=翻墙=利用技术手段，能够访问在中国被GFW禁止/过滤掉无法访问的网站/网络 注：GFW=Great Firewall (of China)=防火长城=中国国家防火墙=简称：墙 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"scientific_network_intro/why.html":{"url":"scientific_network_intro/why.html","title":"为何要科学上网","keywords":"","body":"为何要科学上网 为什么会有科学上网 为什么会有科学上网呢？那是因为中国政府禁止了一些国外的内容，让普通的网民无法访问，所以才要翻过这个墙，去科学上网。 但是国家为何要禁止国外内容呢？主要是因为国外有些内容，让咱中国政府不太高兴，所以政府不想和不希望你能看到那些内容。 到底有哪些内容不想让你看到呢？那此处暂时就不详细说了，&#x1F604;，以防止被和谐。毕竟此处只关心为了学习技术而翻墙，不涉及政治。 科学上网的目的 此处所要谈论的科学上网的主要目的则是： 通过技术手段，可以访问国外的和政治无关的，主要是涉及到计算机技术开发相关的内容，比如google，Wikipedia，stackoverflow等等技术资源，用于技术学习等目的。 至于科学上网之后，看到了国家不希望你看到的内容，不在此教程讨论范围内。&#x1F602; danger:: 严禁用于非法用途 禁止利用本教程所介绍技术从事任何违反本国法律所禁止的活动 如有之，一切非法活动均与本作者无关。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 22:05:54 "},"scientific_network_intro/various_tech_tool.html":{"url":"scientific_network_intro/various_tech_tool.html","title":"相关技术和工具","keywords":"","body":"科学上网的相关技术和工具 用于实现科学上网的相关的技术和工具很多。 下面来简单总结一下各种技术和相关工具： 各种客户端 之前听说或用过的有： 无界：偶尔用过，效果不够稳定 自由门：偶尔用过，效果不够稳定 Chrome插件-红杏：试过，不太好用 蓝灯：据说还行，没用过 GoAgent：用过很长时段时间，最终由于无法保证长期稳定使用而放弃 VPN技术 VPN是一套技术的总称，别称虚拟专网。 可以理解为，加了密的专用的网络/专线，从技术上保证不会被和谐掉。 而把VPN的技术用于科学上网，有很多家可以通过收费服务，你可以找到合适的VPN服务提供商，购买对应的服务。 常见的有： Astrill：好像用的人比较多，但是使用效果一般 ExpressVPN 多态 据本人所了解，目前现状是： （很多大）企业、学校：内部网络在用 个人：很少在用 VPN技术的优缺点 优点：相对安全性还不错 缺点： 开启了VPN -> 所有网络请求都要走VPN -> 对于国内网站，本来无需翻墙，就浪费了流量，且访问速度不理想 关闭了VPN -> 所有的都不走VPN -> 有些需要翻墙的就没办法 总之：没法自动根据所要访问网站而决定是否翻墙 -> 即省流量又保证访问国内站点时速度快 多态 后来听说了 多态： 没用过 查了下，据说支持自动模式识别是否需要翻墙，号称不限速 费用：20元/月或50元/月 -> 比一般的ss的费用要贵 据说不是特别稳定 不能自定义代理规则 对于普通人：其实无所谓 对于开发者：还是有点影响的 偶尔还是需要用到的 工信部禁止未经批准的无资质企业和个人运营VPN 但是查到了： 工信部：中国VPN政策不影响用户信息安全，通信自由受保护科技湃澎湃新闻-The Paper 1月30日，国新办新闻发布会上，工信部总工程师张峰再次回应了关于去年出台的VPN相关政策是否会影响用户跨境访问互联网的问题。他强调，相关政策旨在维护公平有序的市场，规范对象是未经批准的无资质企业和个人，不会对国内外企业和广大用户正常跨境访问互联网、合法依规开展各类经营活动造成影响。 张峰表示，工信部于2017年1月发布《关于清理规范互联网网络接入服务市场的通知》，是为了更好地维护公平有序的市场。该《通知》主要的规范对象是未经电信主管部门批准，也没有国际通信业务经营资质，同时又租用了国际专线或者VPN违规开展跨境业务经营活动的企业和个人。 对于此举是否影响现有的各类用来科学上网的VPN，包括多态，大家自行理解。 Shadowsocks技术 之前用过上述多很多办法，但是均由于速度不够好或不是足够稳定等原因而放弃。 然后后来才遇到Shadowsocks。目前已使用几年，速度和稳定性效果都很好。且（对应客户端支持）自动模式，可以自动判断访问某个网站是否要翻墙，在速度和流量之间得到了平衡。 本教程后续内容主要就是详细介绍Shadowsocks的技术和用法。 Shadowsocks各个版本总结 除了shadowsocks本身，以及简称ss外，还有其他相关版本和其他技术： 科学上网相关术语 简称和别称 图标Logo 技术特点 应用和技术现状 Shawdowsocks SS、飞机场、机场 飞机 具有流量特征，易被运营商拦截 仍有很多服务在用；原始作者被喝茶后停止维护，现由国外一大神维护 ShawdowsocksR SSR、酸酸乳、和SS一起被称为机场 粉红色飞机 是ss一个分支，兼容ss设置；带R表示增加了混淆协议，不易被流量监听 作者被喝茶后，删除了所有github代码并停止维护一年以上了 ShawdowsocksRR SSRR 其实就是ShawdowsocksR 因为原始作者被喝茶后，另一个大神维护起了SSR，取名字SSRR warning:: 现已不推荐ss 虽然之前推荐用Shadowsocks，但是现在20200710已不推荐，而是推荐后续提到的技术：Trojan。 V2Ray 后来从这里听说： 新一代的V2Ray是替代ss的最新技术，效果比ss好，稳定抗干扰能力强，配合破解版锐速和谷歌tcp bbr加速算法，流畅观看youtube高清视频。 后来也去用过，总体效果还行。不过现在感觉也无法长期稳定的保证不被封掉。 Trojan 目前已知的最新技术是Trojan。可以算做V2Ray的下一代技术。部分科学上网提供商已提供此服务。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 20:55:57 "},"ss/":{"url":"ss/","title":"Shadowsocks","keywords":"","body":"Shadowsocks 下面详细介绍Shadowsocks相关技术和如何使用。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:40:06 "},"ss/shadowsocks_intro/":{"url":"ss/shadowsocks_intro/","title":"Shadowsocks介绍","keywords":"","body":"Shadowsocks介绍 此处对于Shadowsocks的技术和使用之前需要了解的概念，进行基本的介绍。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"ss/shadowsocks_intro/what_is_ss.html":{"url":"ss/shadowsocks_intro/what_is_ss.html","title":"Shadowsocks是什么","keywords":"","body":"Shadowsocks是什么 Shadowsocks是一套技术和相关工具的总称，常被简称为ss 而这套技术，至少包含这些大的部分： Shadowsocks技术本身 SOCKS5代理 AEAD 等等 Shadowsocks的服务端 Python的shadowsocks shadowsocks-server shadowsocks-libev libQtShadowsocks shadowsocks-go 等等 Shadowsocks的客户端 Window Mac iOS Android 等等 Shadowsocks在技术上可以简单总结为： 一套基于Socks5代理方式的网络加密传输数据包的技术 = 用socks5技术加密的技术 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-11-05 20:10:16 "},"ss/shadowsocks_intro/ss_official_site.html":{"url":"ss/shadowsocks_intro/ss_official_site.html","title":"Shadowsocks官网","keywords":"","body":"Shadowsocks官网 Shadowsocks这套技术，有个自己官网： shadowsocks.org 本身是：非盈利的 作用是：推广和宣传ss技术 官网主页 Shadowsocks - A secure socks5 proxy Github https://github.com/shadowsocks warning::不要把ss技术官网和普通的提供ss服务的公司的官网搞混淆了 请注意，不要把ss技术的官网，和其他提供ss服务的公司的网站搞混淆了 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:02:11 "},"ss/shadowsocks_intro/ss_utilize_type.html":{"url":"ss/shadowsocks_intro/ss_utilize_type.html","title":"利用Shadowsocks的方式","keywords":"","body":"利用Shadowsocks的方式 而把Shadowsocks技术用于科学上网，则多种方案/方式可选择： 服务器+客户端模式 服务器：首先需要有个ss的服务器 服务器本身自己能够访问国外的网络 当然，同时该服务器上运行了ss的服务 即：服务器+ss服务，则一般有两种方式： 去买Shadowsocks第三方服务商提供的服务器 或者是自己买了VPS服务器后自己搭建出来的Shadowsocks服务器 客户端：然后需要对应客户端，才能用起来Shadowsocks的服务，才能科学上网 不同的平台下，需要安装不同的客户端 且要支持对应的ss服务器所设置的加密方式 尤其是部分ss服务器采用最新的更复杂的加密方式，还要求客户端是最新版才支持，否则无法使用 之后就会详细介绍，如何购买ss的服务或自己搭建ss服务器，以及如何在Mac/Windows/iOS/Android等不同平台中使用ss实现科学上网。 路由器模式 还有一种，不需要客户端的、更一劳永逸的、但更复杂的、也更方便的方案：路由器模式 首先我们知道，我们一般上网都是通过连接了路由器提供的网络而才能去上网的。 而如果通过设置，去实现了，在路由器内部本身就通过ss实现了科学上网，则意味着： 其他使用此路由器提供的网络的人，不论是电脑（Window/Mac）还是手机端（iOS/Android），都无需额外设置，本身就可以达到科学上网的效果了。 总的说就是：用路由器实现ss科学上网，其他连接此网络的设备，无需任何操作即可一劳永逸的直接科学上网了 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"ss/server_client_mode/":{"url":"ss/server_client_mode/","title":"服务器+客户端模式","keywords":"","body":"服务器+客户端模式去使用Shadowsocks 下面就来详细介绍，如何得到对应的ss服务/服务器/服务端，然后如何使用ss的客户端，去添加ss服务器配置信息，实现科学上网。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"ss/server_client_mode/ss_server/":{"url":"ss/server_client_mode/ss_server/","title":"Shadowsocks服务器端","keywords":"","body":"Shadowsocks的服务器 想要用Shadowsocks的客户端+服务器模式去科学上网的话，需要先有ss服务器。 拥有ss服务器的方式有几种： 从第三方服务商那里购买ss相关服务 最新推荐：购买SSR服务，比SS更稳定，不易被封 自己搭建ss服务器 下面就来解释具体如何操作。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:03:36 "},"ss/server_client_mode/ss_server/buy_ss_service/":{"url":"ss/server_client_mode/ss_server/buy_ss_service/","title":"购买第三方服务","keywords":"","body":"购买第三方Shadowsocks服务 能够去用ss去实现科学上网，最简单和省心的方式就是：去购买第三方提供的ss服务 购买第三方ss服务的含义 对于所谓的，你去购买了第三方的ss服务，主要指的是： 你花了（相对不算多的）钱&#x1F4B0; 从第三方提供了ss服务的公司的手上 买了ss服务 你得到了对应的账号和密码和其他服务器的等配置信息 包括： 服务器允许你使用的流量 比如每个月（不超过）50G 服务器的密码 服务器的IP地址/域名 往往同时提供多个地址的服务器，对应多个不同的IP地址/或域名 其他一些配置信息 如此，你就可以去使用任何的ss的客户端，添加了上述的服务器的IP、密码等信息，利用ss技术去科学上网了。 为何要购买别人提供的ss服务而不是自己折腾（搭建自己的ss服务器）？ 和自己搭建ss服务相对，原因很简单：花合适的钱，享受相对不错的服务，即：省心 省心 省了让你操心自己折腾时的各种麻烦的心 -> 买别人服务，别人直接给你账号密码端口等配置信息，直接拿来主义，设置好即可使用 速度快 一般而言，购买的别人的ss服务器的速度都还是很不错的，往往要比自己买的服务器的速度更好 且往往提供多个服务器，选择余地也多 稳定 省了担心自己买的服务器万一哪天被和谐掉的心 自己的被和谐了，就只能重新换IP或域名，或重新买主机，就很麻烦 -> 别人的服务器即使被和谐了，也可以很快的提供其他更多更好的服务器从而可以继续使用ss 而仅仅需要更新一下配置文件而已，不需麻烦的去折腾 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"ss/server_client_mode/ss_server/self_build_ss_server.html":{"url":"ss/server_client_mode/ss_server/self_build_ss_server.html","title":"自己搭建服务器","keywords":"","body":"自己搭建Shadowsocks服务器 除了前面提到的，购买第三方的ss的服务之外，如果自己有能力，有精力，喜欢折腾，或者被逼无奈（之前就遇到20+1大时所有vpn和ss都被和谐了，所以逼的自己建ss服务器），则可以自己去搭建ss服务器。 自己搭建ss服务器的优缺点 自己搭建ss的服务器： 优点： 自己可以任意配置 账号可以给多人使用 流量一般不是问题 缺点： 需要自己折腾 自己需要了解基本的技术才能去搭建 万一被和谐了，VPS服务器的IP可能被封 影响到已有的网站（如果有的话） CentOS中搭建自己的ss服务器 此处以Linux的CentOS中为例，介绍如何搭建自己的ss服务器。 具体实现方式，有多种，但多数都是Python的shadowsocks相关的包或库，然后简单设置一下即可。 准备工作 准备一台可以访问国外网站的VPS主机 在自己搭建ss服务器之前，首先要求你自己有一台可以访问国外网站的服务器，典型的是去（比如Linode、Vultr、DigitalOcean等）主机提供商购买一个VPS主机，这样可以远程通过SSH工具登录主机，然后再去安装ss服务。 比如我此处就是用自己之前从Linode买的VPS，接着在上面折腾，安装ss服务，变成提供了ss服务器。 最好用Python 2的版本 为了兼容性，此处最好Python是2.x的版本，比如此处的是2.7.5： [root@crifan ~]# python --version Python 2.7.5 Python包管理工具：pip 如果没有python的包管理工具，比如pip，则最好先去安装： yum -y install python-setuptools && easy_install pip && pip install --upgrade pip 方式1: 用Python的shadowsocks实现ss服务 用pip去安装shadowsocks pip install shadowsocks 配置shadowsocks 去添加配置文件/etc/shadowsocks.json。 内容可以参考下面的shadowsocks-libev的配置文件/etc/shadowsocks-libev/config.json 启用shadowsocks 启动shadowsocks： ssserver -c /etc/shadowsocks.json -d start 停止shadowsocks： ssserver -c /etc/shadowsocks.json -d stop 方式2: 用shadowsocks-libev实现ss服务 安装shadowsocks-libev cd /etc/yum.repos.d/ curl -O https://copr.fedorainfracloud.org/coprs/librehat/shadowsocks/repo/epel-7/librehat-shadowsocks-epel-7.repo yum install -y shadowsocks-libev 配置shadowsocks-libev 新建配置文件（如果不存在的话）： /etc/shadowsocks-libev/config.json 然后配置对应的参数： server：当前自己的服务器的地址 比如：0.0.0.0 server_port：ss服务的端口 一般要大于1024，小于65536 可以随意取值，只要不和其他端口冲突即可 比如：21500 password：ss客户端使用ss时要使用的密码 比如一个复杂但安全的，包含数字和大小写字母的密码：Ci20s5a6y96F method：加密方式 以前常见的方式是：aes-256-cfb 最新更加复杂但更安全的是：chacha20-ietf-poly1305 但是注意需要ss客户端要支持该加密方式才能正常使用ss服务 timeout：超时时间，单位：秒 比如：300 mode：ss服务的模式 比如：tcp_and_udp，即支持tcp也支持udp 举例，比如我此处的设置是： { \"server\": \"0.0.0.0\", \"server_port\": 21500, \"password\": \"Ci20s5a6y96F\", \"method\": \"aes-256-cfb\", \"timeout\": 300, \"mode\": \"tcp_and_udp\" } 启动shadowsocks-libev 启动：systemctl restart shadowsocks-libev 想要以后每次重启（Linux的CentOS）服务器时都可以自动启动此ss服务，则可以去： 设置开机启动：systemctl enable shadowsocks-libev 其他相关命令： 查看状态：systemctl status shadowsocks-libev 查看日志：journalctl -u shadowsocks-libev 重启：systemctl restart shadowsocks-libev 如何确认ss是否正在正常运行 有多种手段查看ss是否正常运行： systemctl status shadowsocks-libev 比如用 systemctl status shadowsocks-libev 去查看状态是否正常： [root@crifan yum.repos.d]# systemctl status shadowsocks-libev [0m shadowsocks-libev.service – Shadowsocks-libev Default Server Service Loaded: loaded (/usr/lib/systemd/system/shadowsocks-libev.service; disabled; vendor preset: disabled) Active: active (running) since Mon 2017-10-23 20:32:02 CST; 25s ago Docs: man:shadowsocks-libev(8) Main PID: 20915 (ss-server) CGroup: /system.slice/shadowsocks-libev.service 20915 /usr/bin/ss-server -c /etc/shadowsocks-libev/config.json -u Oct 23 20:32:02 crifan.com systemd[1]: Started Shadowsocks-libev Default Server Service. Oct 23 20:32:02 crifan.com systemd[1]: Starting Shadowsocks-libev Default Server Service… Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: UDP relay enabled Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: initializing ciphers… aes-256-cfb Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: tcp server listening at 0.0.0.0:21500 Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: udp server listening at 0.0.0.0:21500 journalctl -u shadowsocks-libev 可以查看对应的log输出是否正常，比如： [root@crifan yum.repos.d]# journalctl -u shadowsocks-libev — Logs begin at Thu 2017-10-12 03:56:54 CST, end at Mon 2017-10-23 20:39:17 CST. — Oct 23 20:32:02 crifan.com systemd[1]: Started Shadowsocks-libev Default Server Service. Oct 23 20:32:02 crifan.com systemd[1]: Starting Shadowsocks-libev Default Server Service… Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: UDP relay enabled Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: initializing ciphers… aes-256-cfb Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: tcp server listening at 0.0.0.0:21500 Oct 23 20:32:02 crifan.com ss-server[20915]: 2017-10-23 20:32:02 INFO: udp server listening at 0.0.0.0:21500 netstat -autn 通过命令：netstat -autn 或：netstat -lnp，去查看ss的端口是否正常： [root@crifan yum.repos.d]# netstat -autn Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:443 0.0.0.0:* LISTEN tcp 0 0 0.0.0.0:21500 0.0.0.0:* LISTEN ... tcp 0 0 45.79.205.194:443 222.188.39.139:52004 ESTABLISHED ... tcp 0 1 45.79.205.194:80 61.147.173.53:45254 LAST_ACK tcp6 0 0 :::22 :::* LISTEN udp 0 0 0.0.0.0:21500 0.0.0.0:* 其中的21500就是上面设置的ss的端口，对应着tcp和udp的服务，表示都在正常运行。 ps ax |grep ss-server 也可以用ps ax |grep ss-server去看看当前已经通过ss-server启用了哪些ss的服务 用shadowsocks-libev实现多账号/多用户 上述创建的ss服务，只有一个（账号）密码，只能供一个人用，或者说，如果多个人使用，则使用的是同一个（账号）密码，显得很不方便和不安全。 如果想要多个用户每人有不同的账号（密码），则可以：用shadowsocks-libev实现多账号/多用户 新建另外一个配置文件，比如： /etc/shadowsocks-libev/config2.json 内容和之前一致，只是端口号server_port和密码password改了一下即可： { \"server\": \"0.0.0.0\", \"server_port\": 21501, \"password\": \"passowrd2\", \"method\": \"aes-256-cfb\", \"timeout\": 300, \"mode\": \"tcp_and_udp\" } 注意: 端口号不要和系统中其他服务的端口号冲突了。 另外再去用： setsid ss-server -c /etc/shadowsocks-libev/config2.json -u 启用新端口对应的ss服务。 说明+坑+注意事项 关于更多的折腾的细节可以参考：【已解决】Linode的CentOS 7中搭建shadowsocks – 在路上 此处把一些常见的坑/注意事项/说明解释，整理如下： Shadowsocks官网 官网也有介绍如何安装ss服务端 其实Shadowsocks的官网中也有管理server端的介绍：Shadowsocks - Servers，也可以参考官网去安装服务端的ss。 官网也有介绍如何ss的配置的 官网也有关于ss的配置信息的介绍的，包括： 基本的配置信息的介绍：Shadowsocks - Quick Guide 其中包含关于二维码的规则的介绍 更加高级的配置：Shadowsocks - Advanced 建议设置一个复杂但安全的密码 为了使得自己的ss的相对更加安全，建议设置一个相对比较复杂的密码 比如可以使用第三方密码生成工具：Generate Password 去生成一个比较复杂的密码，就类似于：ci20s5a6y96f FirewallD is not running 在启用ss服务期间，在检查是否可能是由于防火墙的问题而导致ss服务没有正常运行时，可能会遇到： FirewallD is not running -> 其表示：防火墙并没有运行 -> 对应着（和我此处类似的Linode的）CentOS中的防火墙，默认是关闭的 -> 所以不是防火墙的问题。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"ss/server_client_mode/ss_client/":{"url":"ss/server_client_mode/ss_client/","title":"Shadowsocks客户端","keywords":"","body":"Shadowsocks的客户端 想要用ss技术实现科学上网，在已经通过某种方式，比如： 从第三方ss服务商那里购买了ss服务 自己搭建了ss服务器 得到了ss的服务器相关信息，比如服务器IP/域名、端口号、密码、加密方式等信息后，就可以去下载对应平台的客户端，添加对应的ss服务配置信息，就可以使用ss服务了。 下面先解释一下ss客户端的通用的逻辑，再去分别介绍不同的平台下有哪些ss的客户端，以及具体如何使用。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:42:33 "},"ss/server_client_mode/ss_client/client_common_logic.html":{"url":"ss/server_client_mode/ss_client/client_common_logic.html","title":"ss类客户端的通用逻辑","keywords":"","body":"Shadowsocks客户端通用逻辑 下面就来对使用ss技术时所涉及到的客户端的各种通用逻辑来详细解释一下： ss客户端使用ss服务的配置信息包含哪些 有了ss客户端，想要用ss服务的话，前提是你已经有了对应的ss服务器的配置信息 最最基本的ss服务器的配置信息至少包括： 服务器的地址：一般是IP或域名 服务器的端口号 加密方式：常见都有aes-256-cfb、chacha20-ietf-poly1305等等 密码 然后把这些配置信息，添加到ss的客户端中，就可以使用ss了。 加密方式：aes-256-cfb 和 chacha20-ietf-poly1305 在介绍如何用ss客户端之前，先对于加密方式做个详细的解释，否则会导致下载了客户端，但不支持新的加密方式，而无法使用的问题。 ss技术本身不限制你采用何种加密方式去加密数据。 目前主流的ss服务器端所采用的加密方式，其实更多的还是：aes-256-cfb 而有些ss服务，现在是采用最新的加密方式：chacha20-ietf-poly1305 对比来说就是： 之前旧的加密方式是：aes-256-cfb 最常见，使用的最为广泛 所以一般的ss的客户端也都支持 比如之前我就用过的： Mac的ShadowsocksX Android的影梭 但是不是足够复杂和安全 现在新的加密方式是：chacha20-ietf-poly1305 相对来说，更加复杂，但也更安全 但是： 很多旧版本客户端都不支持 换句话说： 如果你的ss服务用的是chacha20-ietf-poly1305加密方式，但你用的客户端不支持chacha20-ietf-poly1305（即使支持chacha20-ietf也不行），那就没法使用ss了 只有一些新版的客户端才支持，包括： Mac：macOS shadowsocksX-NG 1.6.1+ Windows：Shadowsocks-Windows 4.0.6+ Android：Shadowsocks Android 4.2.5+ iOS：最新版shadowrocket 或Potatso/Potatso Lite 添加ss服务配置信息的方式 对于ss客户端中去添加上述ss服务器的配置信息，有多种方式： 添加订阅+更新订阅 实现一次性添加所有服务器节点 后来知道了一个更加先进和方便的添加服务器节点的办法： 添加订阅地址 前提：需要购买的服务器支持订阅 会有一个普通网址一样的订阅地址 然后即可去客户端端添加订阅地址 更新订阅 即可瞬间，批量添加所有的服务器节点 手动（一个一个）添加（ss服务器配置信息） 对于上述的ss服务器的配置信息，可以一个个手动的去输入。 典型的方式是，一个个复制和粘贴对应的ss服务器的地址，端口号，选择对应的加密方式，粘贴密码等等，去手动添加配置信息。 扫（描二维）码（添加单个ss服务器配置信息） 一般的购买到的ss的第三方服务，都提供了二维码，某个二维码是对应ss服务器的配置信息根据一定规则生成的 -> 所以ss客户端如果支持扫码添加的话，即可去扫码，内部自动解析配置，从而自动添加该ss服务器配置信息 和上面的手动的复制和粘贴相比，肯定是通过扫码去添加配置，要方便多了。 批量导入（导入单个json配置文件实现一次性添加多个服务器配置信息） ss客户端支持的话，可以去利用别人（比如我自己去添加多个服务器配置后，去导出）弄好的配置信息（一般是json文件），然后直接导入配置文件，即可实现批量添加多个ss服务器配置信息了。并且，同时也把其他ss客户端的其他设置信息也添加进来了，更是方便。 和上面的手动或扫码比，批量的导入，当然是更加方便了。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:47:14 "},"ss/server_client_mode/ss_client/ss_clients/":{"url":"ss/server_client_mode/ss_client/ss_clients/","title":"ss的客户端","keywords":"","body":"Shadowsocks的客户端 下面详细介绍不同平台中的Shadowsocks=ss=SS的客户端。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-11-05 22:29:49 "},"ss/server_client_mode/ss_client/ss_clients/ss_windows.html":{"url":"ss/server_client_mode/ss_client/ss_clients/ss_windows.html","title":"Windows的ss客户端","keywords":"","body":"Windows中的Shadowsocks客户端 Windows版ss客户端：Shadowsocks.exe 下载和安装Shadowsocks.exe Winddows中的ss客户端，有多种，常用的是： 去github官网 : Releases · shadowsocks/shadowsocks-windows · GitHub 点击下载最新的Windows的客户端： 解压缩下载得到的zip文件后，即可得到exe可执行文件，无需额外安装，双击即可打开使用。 使用Win版Shadowsocks.exe实现科学上网 Win版Shadowsocks的功能，其实和后面要介绍的Mac版ss客户端：ShadowsocksX-NG的用法，基本上是一样的。所以可以具体用法可以参考后面的ShadowsocksX-NG。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:52:49 "},"ss/server_client_mode/ss_client/ss_clients/ss_mac.html":{"url":"ss/server_client_mode/ss_client/ss_clients/ss_mac.html","title":"Mac的ss客户端","keywords":"","body":"Mac中的Shadowsocks客户端 Mac下的Shadowsocks客户端也有不止一个。 用过的有： ShadowsocksX 对应下载地址是：ShadowsocksX-2.6.3.dmg ShadowsocksX-NG 之所以换用ShadowsocksX-NG： 某ss服务商改用新加密算法chacha20-ietf-poly1305后，而ShadowsocksX不支持，所以才换用ShadowsocksX-NG的。 两个版本的功能和使用方式，基本上没太大区别。 下面主要来介绍ShadowsocksX-NG的使用。 Mac版ss客户端：ShadowsocksX-NG 下载和安装ShadowsocksX-NG 从Github中下载：Releases · shadowsocks/ShadowsocksX-NG 解压下载得到的ShadowsocksX-NG.1.7.0.zip得到app文件：ShadowsocksX-NG.app 把ShadowsocksX-NG.app拖动到应用程序Application文件夹，即可： 运行ShadowsocksX-NG 安装后，从LaunchPad中： 或从 应用程序中也可以找到： Shadowsocks-NG，点击以启动： 当前Shadowsocks-NG的版本是最新的1.7.0: ShadowsocksX-NG中添加服务器配置信息 如之前介绍，有三种办法添加ss服务器的配置信息： 一次性导入json配置文件 可以添加所有的服务器配置 通过扫描二维码添加 只能一个个添加服务器 手动输入服务器的域名，密码，加密方式等信息 只能一个个添加服务器 下面分别介绍： 一次性导入json配置文件 可以导入（别人配置好后导出的）json配置文件，可以实现一次性批量导入所有服务器信息 服务器 - xxx -> 导入服务器配置文件 然后选择（之前别人整理好的，导出的）json配置文件： 稍等，提示导入成功： 即可（一次性批量）导入对应（多个）服务器： 通过扫描二维码添加 前提是已经有了对应的服务器的二维码 购买了ss服务后，可以通过后台管理页面中找到对应二维码。 此处去登录后台管理页面，点击二维码： 会弹出二维码： 然后点击ShadowsocksX-NG的菜单 -> 扫描屏幕上的二维码 会自动识别屏幕上（刚才页面中弹出的）二维码，扫描成功后会提示： 如此，每个服务器都点击一下对应二维码，用Shadowsocks-NG去扫码，即可添加对应服务器。 手动输入服务器的域名，密码，加密方式等信息 点击 服务器 - xxx -> 服务器配置 会弹出设置界面，点击左下角的加号➕，然后填入对应配置信息： 地址：[必填]服务器的IP或域名地址 对应着：节点服务器地址 端口：[必填]端口号 对应着：服务端口 加密方法：[必填]（现在最新的加密方法是）chacha20-ietf-poly1305 对应着：加密方式 密码：[必填]密码 对应着：登录密码 备注：[选填] 自己填个自己觉得容易识别的好记的名字 比如： hk1 然后点击确定。 用同样方法，一个个的去添加其他的服务器配置。 ShadowsocksX-NG其他使用相关的配置 在添加了ss的服务器之后，接着去介绍如何使用ShadowsocksX-NG客户端。 打开/启用Shadowsocks 先去打开SS的客户端，选择打开Shadowsocks 如此，即可去畅游互联网了，可以去打开本来无法访问的而现在可以访问的，比如： https://www.youtube.com 当然，下面还是可以去根据需要去更改对应的设置的： 选择工作模式 如果不想要看下面的模式的详细解释，那么直接使用默认的PAC自动模式即可。 关于不同工作模式的解释： PAC自动模式 让Shadowsocks-NG去（根据设置中的GFW List）自动识别在打开网页时，是否需要翻墙 推荐：普通小白用户使用此模式 比如打开国内的百度，腾讯，网易等网站，不需要翻墙 比如打开国外的google，youtube等需要翻墙 全局模式 强制对于所有打开的网页都是用翻墙 优点和使用场景：对于部分页面，有些网页用自动模式打不开，则可以尝试全局模式，往往可以打开 缺点：如果对于本身无需翻墙的国内网站，比如百度也强制翻墙的话，访问速度可能会降低 手动模式 提示：一般人很少用 设置为手动模式后，需要自己去编辑PAC用户自定规则，添加自己定义的规则，决定哪些页面翻墙，哪些页面不翻墙。 选择用哪个服务器去翻墙 在添加了多个服务器后，可以点击 服务器 - xxx -> 去选择切换为自己需要的服务器： 即可切换到（自己平时经常使用的，觉得速度和稳定性都不错的）us2的服务器： 设置开机启动 想要每次开机自动启动的话，可以去：偏好设置 勾选上开机启动 把当前所使用的ss服务器信息分享给别人 如果想要把当前你正在使用的ss的服务器的（地址，端口，密码，加密方式等）配置信息分享给别人，则可以： 选择显示当前服务器的二维码 即可显示出当前服务器的二维码： 供其他人使用。 比如：别人用手机中的ss客户端去扫码添加该ss服务器到自己的客户端中。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:50:19 "},"ss/server_client_mode/ss_client/ss_clients/ss_android.html":{"url":"ss/server_client_mode/ss_client/ss_clients/ss_android.html","title":"Android的ss客户端","keywords":"","body":"Android中的Shadowsocks客户端 info:: 详细过程见单独帖子 更多细节详见：【记录】安装和使用支持chacha20-ietf-poly1305的Android的shadowsocks客户端 – 在路上 下面把关键步骤整理如下供参考。 下载和安装 两种方式： 自己去github下载apk安装包后自己安装 去Releases · shadowsocks/shadowsocks-android 可以下载到apk，比如：shadowsocks--universal-4.6.5.apk： 然后安装到Android手机中即可： 从应用市场Google Play去搜索并安装 Shadowsocks - Android Apps on Google Play 添加配置 打开ss客户端，然后去添加服务器节点的配置，主要是去配置服务器的地址，端口，密码，加密方式等内容。 info:: 对ss的配置不熟悉的可参考通用的逻辑 各种ss的客户端的配置的逻辑都是一样的，如果不清楚可去参考：ss客户端的通用逻辑 · 科学上网相关知识总结 此处点击右上角的加号➕： 会显示出3种方式： 扫描二维码：扫描二维码后自动解析并添加配置 从剪贴板导入：一般是从别处拷贝了对应服务器配置的字符串，然后再来此处粘贴。 自己很少用到此方式 手动设置：自动手动填写配置信息 虽然稍微麻烦点，但是最通用 一般来说，推荐扫码添加，因为很方便 -》 但是下面会解释此处安卓中由于扫码需要Google Play而导致死循环，而不方便扫码 -》 所以此处推荐手动添加 不过先说说如果要扫码，如何操作： 扫码添加配置 在扫描之前，先要有二维码可以扫，购买后去后台配置页面中可以找到二维码。 warning:: 安卓扫码添加配置需要更新Google Play服务 此处实践发现，安卓端扫码去添加配置： 竟然会出现提示：更新Google Play服务，您必须先更新Google Play服务，然后才能运行shadowsocks 而Google Play服务本身，却又需要翻墙才能更新，而此处就是要去翻墙，导致死循环了，所以此路暂时不通。 手动添加配置 所以此处为了能正常添加配置，建议用手动设置的方式去添加ss服务器配置。 点击手动配置后，填写如下信息： ss服务的配置： 配置名称：可选，\b比如填写hk1 1.00，表示节点名和流量费率，方便区分不同节点 服务器：ss服务器的地址 远程端口：ss服务器的端口 密码：ss的密码 自建ss服务器或者购买的ss服务器，都会提供相关密码给你的 加密方式：比如最新的：chacha20-ietf-poly1305 其他软件的配置 路由：默认是全局，建议改为：绕过局域网和中国大陆地址 填写配置后如下： 按照同样方式，去添加其他节点的服务器配置。 开始使用 点击选中某个服务器节点（左边会有竖向的绿色提示），点击右下角纸飞机按钮去连接，连接后： 点击已连接，点击测试连接去测试速度如何： 就表示可以使用了，同时系统通知中也会有VPN和流量的提示： 然后就可以愉快的科学上网了，比如： 去用youtube看视频： 去用手机浏览器上google查资料： crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:51:08 "},"ss/server_client_mode/ss_client/ss_clients/ss_ios.html":{"url":"ss/server_client_mode/ss_client/ss_clients/ss_ios.html","title":"iOS的ss客户端","keywords":"","body":"iOS中的Shadowsocks客户端 iOS中的Shadowsocks客户端，也有多种。 可以参考Shadowsocks官网中：Shadowsocks - Clients介绍的： Wingy： App Store MobileShadowSocks Big Boss 不过想要使用支持最新加密方式chacha20-ietf-poly1305的客户端的话，目前只有这几个： iOS的ss客户端：shadowrocket 评分低的Wang Haiyan的shadowrocket 国内账号的AppleID登录后的国内AppStore可以搜索到 不过貌似看了下，评分只有2.8分，很差啊： 难道不是原版？然后注意到作者是：Wang Haiyan 评分高的Guangming Li的shadowrocket 而后来去google搜到的是：Guangming Li的Shadowrocket on the App Store，评分很高：4.6分，估计是才是正版。 用iPhone的相机去扫码页面二维码，打开后，跳转到AppStore中，但是提示： 项目不可用 中国店面目前没有您想要的项目。不过此项目在美国店面提供。点一下\"更改店面\"查看此项目。 然后点击更改店面，去看看效果，竟然还真能直接切换AppStore的地区，然后可以搜索到，看起来是正宗的shadowrocket了： 本来打算去安装试试效果，发现要收费$2.99，所以还是算了。 不过点击后发现，好像没法买Account Not in This Store： 所以，虽然AppStore可以自动帮你切换地区，但是如果你的苹果账号AppleID不是美国的，还是无法下载此处正宗美国版的shadowrocket。还是需要美国的AppleID才可以下载和安装。 iOS的ss客户端：Potatso/Potatso Lite 国内账号的AppleID登录后的国内AppStore搜索不到 估计是被国家和谐了，不允许上架到国内的AppStore市场 如何才能从iPhone的AppStore中搜索并下载到Potatso？ 网友提供了一些方式，供参考： 把AppleID的国家/地区设置成加拿大，支付方式选择none，设置成其它国家也可以，但是可能需要有当地的信用卡才行。然后下载potatso lite，只有这是免费的，可以不用支付。下载完成后把国家地区设置回来即可。 去淘宝买个其他国家appple id，然后再去美国的app store就可以下载了Potatso 见过别人用iPhone+自己的国外的appleid，在AppStore上可以搜到potatso，然后就可以下载并安装，然后扫描添加服务器配置后，就可以正常翻墙了 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:51:14 "},"ss/server_client_mode/ss_client/ss_clients/ss_other.html":{"url":"ss/server_client_mode/ss_client/ss_clients/ss_other.html","title":"其他平台的ss客户端","keywords":"","body":"其他平台的Shadowsocks客户端 Chrome App 下载地址：Chrome App crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-11-05 22:12:38 "},"ss/server_client_mode/ss_client/ssr_clients/":{"url":"ss/server_client_mode/ss_client/ssr_clients/","title":"SSR的客户端","keywords":"","body":"ShadowsocksR的客户端 下面详细介绍不同平台中的Shadowsocks=ssr=SSR的客户端。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-11-05 22:29:39 "},"ss/server_client_mode/ss_client/ssr_clients/ssr_mac.html":{"url":"ss/server_client_mode/ss_client/ssr_clients/ssr_mac.html","title":"Mac的SSR客户端","keywords":"","body":"Mac中的ShadowsocksR客户端 和Shadowsocks的客户端： Shadowsocks的Mac的客户端 ShadowsocksX ShadowsocksX-NG 是类似的，Mac下的ShadowsocksR客户端只是后缀加上一个R： ShadowsocksX-R github首页 https://github.com/yichengchen/ShadowsocksX-R 客户端下载页面 https://github.com/yichengchen/ShadowsocksX-R/releases 下载链接 https://github.com/yichengchen/ShadowsocksX-R/releases/download/ssr_1.38_2/ShadowsocksX-R.app.zip ShadowsocksX-NG-R github首页 https://github.com/qinyuhang/ShadowsocksX-NG-R/ 客户端下载页面 https://github.com/qinyuhang/ShadowsocksX-NG-R/releases 下载链接 https://github.com/qinyuhang/ShadowsocksX-NG-R/releases/download/1.4.4-r8/ShadowsocksX-NG-R8.dmg Mac版SSR客户端：ShadowsocksX-NG-R8 此处介绍Mac中如何使用ShadowsocksX-NG-R8： 下载和安装ShadowsocksX-NG-R8 从Github中下载：Releases · qinyuhang/ShadowsocksX-NG-R，得到的ShadowsocksX-NG-R8.dmg，双击去安装，即把其中的：ShadowsocksX-NG-R8.app拖动到应用程序=Application文件夹即可。 运行ShadowsocksX-NG-R8 安装后，从应用程序中找到应用： 双击启动，通过关于： 可以看到当前版本是：1.4.4-R8 (1) ShadowsocksX-NG-R8中添加服务器配置信息 之后导入服务器配置，其用法和之前的Shadowsocks-NG是类似的。 不过后来得知一个更加高效率的办法： 添加订阅后，更新订阅，即可批量导入服务器配置。 步骤如下： 找到你所购买的SSR的服务器配置的订阅链接 地址类似于：https://xxx.com/link/xxxxxx 然后去编辑订阅： 点击+，再输入订阅地址： 点击OK保存后，再去点击手动更新订阅： 很快就会收到通知，更新订阅成功： 即可更新获取到所有的服务器配置了： 如此，再去选择某个服务器节点，即可正常使用，实现科学上网。 小提示：可以借助于服务器测速，找出速度最快的服务器节点，然后用该节点科学上网。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:51:46 "},"ss/router_mode/":{"url":"ss/router_mode/","title":"路由器模式","keywords":"","body":"路由器模式去使用Shadowsocks 如何通过路由器模式去利用Shadowsocks实现科学上网，其大致的步骤是： 也是先确保自己有了一个（VPS）服务器，其中装了对应版本的shadowsocks-libev的ss的客户端 然后再确保自己买的路由器支持刷OpenWRT固件 然后再里面装上合适的版本的OpenWrt的ss的客户端 Releases · shadowsocks/openwrt-shadowsocks 然后再进行后续的职能自动科学上网方面配置即可 具体的操作过程，可以参考别人的教程： OpenWrt智能、自动、透明翻墙路由器教程 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"v2ray/":{"url":"v2ray/","title":"V2Ray","keywords":"","body":"V2Ray V2Ray可视为ss的下一代技术。 其基本用法和思路，和ss一致，不多赘述。 总体思路 服务端 自己搭建服务器或买第三方的服务 客户端 再去使用某个V2Ray的client端 加上配置 即可科学上网 相关资料 GitHub GitHub - v2ray/v2ray-core: A platform for building proxies to bypass network restrictions. 文档 Project V · Project V 官方网站 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:33:16 "},"trojan/":{"url":"trojan/","title":"Trojan","keywords":"","body":"Trojan Trojan可视为V2Ray的下一代技术。 目前是相对来说最保险，最不容易被检测出和被封掉的技术。 对于此技术的基本用法和思路，和ss、V2Ray一致，不多赘述。 Logo 总体思路 服务端 自己搭建服务器或买第三方的服务 客户端 再去使用某个Trojan的客户端 加上配置 即可科学上网 原理概述 Github GitHub - trojan-gfw/trojan: An unidentifiable mechanism that helps you bypass GFW. 客户端下载 PC端 Trojan-Qt5 Releases · Trojan-Qt5/Trojan-Qt5 · GitHub TrojanX Releases · JimLee1996/TrojanX · GitHub crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:35:13 "},"appendix/":{"url":"appendix/","title":"附录","keywords":"","body":"附录 此处整理出相关参考资料。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2019-07-09 21:52:21 "},"appendix/reference.html":{"url":"appendix/reference.html","title":"参考资料","keywords":"","body":"参考资料 隐秘技术有助于绕过审查 | 美国之音特别报道 防火长城 - 维基百科，自由的百科全书 Shadowsocks - 维基百科，自由的百科全书 【已解决】查看Mac中当前ShadowsocksX的版本以及找到ShadowsocksX最新版本是多少 【无需解决】ShadowsocksX中从GFWList更新本地PAC出错Request failed not found 404 【已解决】给shadowsocks手动添加国外地址用于翻墙 【未解决】Mac中ShadowsocksX的配置文件gui-config.json不起效果 – 在路上 【记录】通过扫描二维码去添加Shadowsocks的服务器配置 – 在路上 【已解决】shadowsocks-libev.service: main process exited, code=exited, status=1/FAILURE – 在路上 【无需解决】CentOS中添加端口号出错：FirewallD is not running – 在路上 【已解决】Linode的CentOS 7中搭建shadowsocks – 在路上 【记录】给科学上网shadowsocks续费 – 在路上 科学上网 - VPS 搭建 Shadowsocks 并开启 BBR | Happy Hacking 科学上网的终极姿势：在 Vultr VPS 上搭建 Shadowsocks – Yale – Medium VPS上搭建Shadowsocks科学上网的那些事 序言 · 一步一步搭建自己的Shadowsocks Shadowsocks简介 · Shadowsocks 使用 Shadowsocks 自建翻墙服务器，实现全平台 100% 翻墙无障碍 使用shadowsocks科学上网 搬瓦工+shadowsocks：搭建自己的VPN服务器 — Msq 利用Vutrl搭建ShadowSocks科学上网 | 灭God的技术博客 vps配置科学上网]shadowsocks服务端配置 如今我这样科学上网 – Unbinilium – Medium Shadowsocks SS 科学上网 一键部署脚本 加密技术扫盲 - 黑客派 求推荐支持chacha20-ietf-poly1305加密的IOS客户端【ss代理吧】_百度贴吧 史上最详细的OpenWrt shadowsocks路由器自动翻墙教程 智能翻墙工具推荐 多态（DUOTAI.ORG）现已开放少量邀请注册，邀请码激活数量有限。 本次的邀请码为：BERNERS-LEE，以此纪念万维网发明者 多态：无需安装客户端的高速自动判断型VPN工具 - 外贸推广 - 环球外贸论坛 「多态」是一家极其糟糕的服务商，烂如情怀锤。 - 简书 真正不限速的VPN推荐一：挂多态Instagram/tumblr发图秒速上传安全防御浠水网 xishuiw.com 多账号被封 | 参差多态，才是幸福本源 - 简书 vultr vps安装vray开启bbr加速教程 – 我是王掌柜 【VPN、SS、SSR、SSRR】让小白秒变高手的科学上网方式_FTFan社区_FCoin社区论坛 SSR MAC客户端ShadowsocksX-NG-R下载、安装及使用教程-SSR中文网 v2ray机场推荐——V2rayPro | 3NICE 优质V2ray机场推荐 | 3NICE 购物车 - V2rayPro 便宜好用的 V2Ray 服务商推荐 - 知津 便宜好用的 V2Ray 服务商推荐 | 猎人杂货铺 SS/SSR/V2Ray 服务商(机场)推荐 - 聪聪 Blog Dler Cloud BabyDriverVPN - V2ray.com官方推荐, 稳定、快速、安全的VPN服务商 成功从v2ray升级到trojan✌ https://t.co/CikWRT2HdS 这年头该用啥代理？ - YangMame BUG 同一台主机，Trojan比v2ray慢一个数量级 · Issue #175 · trojan-gfw/trojan 搭建tls速度慢,仅300k · Issue #165 · trojan-gfw/trojan 新的科学上网方式trojan安装使用记录 【精】使用Docker容器同时部署Trojan,V2ray,Brook,SSR实现科学上网 - lcry-我的主页 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-07-10 21:43:47 "}}